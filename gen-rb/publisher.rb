#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require File.dirname(__FILE__) + '/pub_sub_types'

module Publisher
  class Client
    include ::Thrift::Client

    def get_user_attributes(user_id)
      send_get_user_attributes(user_id)
      return recv_get_user_attributes()
    end

    def send_get_user_attributes(user_id)
      send_message('get_user_attributes', Get_user_attributes_args, :user_id => user_id)
    end

    def recv_get_user_attributes()
      result = receive_message(Get_user_attributes_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_user_attributes failed: unknown result')
    end

    def subscribe(user_id, my_host, my_port)
      send_subscribe(user_id, my_host, my_port)
      return recv_subscribe()
    end

    def send_subscribe(user_id, my_host, my_port)
      send_message('subscribe', Subscribe_args, :user_id => user_id, :my_host => my_host, :my_port => my_port)
    end

    def recv_subscribe()
      result = receive_message(Subscribe_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'subscribe failed: unknown result')
    end

    def publish(user_attributes)
      send_publish(user_attributes)
      recv_publish()
    end

    def send_publish(user_attributes)
      send_message('publish', Publish_args, :user_attributes => user_attributes)
    end

    def recv_publish()
      result = receive_message(Publish_result)
      return
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_get_user_attributes(seqid, iprot, oprot)
      args = read_args(iprot, Get_user_attributes_args)
      result = Get_user_attributes_result.new()
      result.success = @handler.get_user_attributes(args.user_id)
      write_result(result, oprot, 'get_user_attributes', seqid)
    end

    def process_subscribe(seqid, iprot, oprot)
      args = read_args(iprot, Subscribe_args)
      result = Subscribe_result.new()
      result.success = @handler.subscribe(args.user_id, args.my_host, args.my_port)
      write_result(result, oprot, 'subscribe', seqid)
    end

    def process_publish(seqid, iprot, oprot)
      args = read_args(iprot, Publish_args)
      result = Publish_result.new()
      @handler.publish(args.user_attributes)
      write_result(result, oprot, 'publish', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Get_user_attributes_args
    include ::Thrift::Struct
    USER_ID = 1

    ::Thrift::Struct.field_accessor self, :user_id
    FIELDS = {
      USER_ID => {:type => ::Thrift::Types::I32, :name => 'user_id'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

  end

  class Get_user_attributes_result
    include ::Thrift::Struct
    SUCCESS = 0

    ::Thrift::Struct.field_accessor self, :success
    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::LIST, :name => 'success', :element => {:type => ::Thrift::Types::STRUCT, :class => TUserAttribute}}
    }

    def struct_fields; FIELDS; end

    def validate
    end

  end

  class Subscribe_args
    include ::Thrift::Struct
    USER_ID = 1
    MY_HOST = 2
    MY_PORT = 3

    ::Thrift::Struct.field_accessor self, :user_id, :my_host, :my_port
    FIELDS = {
      USER_ID => {:type => ::Thrift::Types::I32, :name => 'user_id'},
      MY_HOST => {:type => ::Thrift::Types::STRING, :name => 'my_host'},
      MY_PORT => {:type => ::Thrift::Types::I32, :name => 'my_port'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

  end

  class Subscribe_result
    include ::Thrift::Struct
    SUCCESS = 0

    ::Thrift::Struct.field_accessor self, :success
    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::I64, :name => 'success'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

  end

  class Publish_args
    include ::Thrift::Struct
    USER_ATTRIBUTES = 1

    ::Thrift::Struct.field_accessor self, :user_attributes
    FIELDS = {
      USER_ATTRIBUTES => {:type => ::Thrift::Types::LIST, :name => 'user_attributes', :element => {:type => ::Thrift::Types::STRUCT, :class => TUserAttribute}}
    }

    def struct_fields; FIELDS; end

    def validate
    end

  end

  class Publish_result
    include ::Thrift::Struct

    FIELDS = {

    }

    def struct_fields; FIELDS; end

    def validate
    end

  end

end

